version: '3.7'

services:
  myeureka:
    image: "eureka:0.1"
    ports:
      - "8761:8761"
    links:
      - edge
      - 301micro
      - kafkaproducer
      - kafka
      - zookeeper
    networks:
      test:
        ipv4_address: 10.5.0.5

  edge:
    image: "edge:0.1"
    ports:
      - "8081:8081"
    environment:
      # Important for clients to register with eureka
      - eureka.client.serviceUrl.defaultZone=http://10.5.0.5:8761/eureka/
    networks:
      test:
        ipv4_address: 10.5.0.6


  kafkaproducer:
    image: "kafkaproducer:0.1"
    ports:
      - "8082:8082"
    environment:
      - spring.kafka.producer.bootstrap-servers=kafka:9092
    networks:
      test:
        ipv4_address: 10.5.0.8

  301micro:
    image: "301micro:0.1"
    ports:
      - "8080:8080"
    environment:
      # Important for clients to register with eureka
      - eureka.client.serviceUrl.defaultZone=http://10.5.0.5:8761/eureka/
      - spring.kafka.bootstrap-servers=kafka:9092
    networks:
      test:
        ipv4_address: 10.5.0.7




  zookeeper:
    hostname: zookeeper
    image: "wurstmeister/zookeeper"
    ports:
      - "2181:2181"
    networks:
      test:
        ipv4_address: 10.5.0.9
  kafka:
    hostname: kafka
    image: "wurstmeister/kafka"
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      test:
        ipv4_address: 10.5.0.10

networks:
  test:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/24






